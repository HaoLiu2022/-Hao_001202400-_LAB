/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import Model.Application;
import Model.Observation;
import Model.VitalSignHistory;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author haoliu
 */
public class ViewJPanel extends javax.swing.JPanel {

    private Application application;
    DefaultTableModel viewtableModel;
    Observation selectedObservation;

    /**
     * Creates new form ViewJPanel
     */
    ViewJPanel(Application application) {
        initComponents();

        this.application = application;
        this.viewtableModel = (DefaultTableModel) observationTable.getModel();

        // display the vital sign observations
        displayObservations();

    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        observationTable = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        viewObservationBtn = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        fieldObservationID = new javax.swing.JTextField();
        fieldTemperature = new javax.swing.JTextField();
        fieldBloodPressure = new javax.swing.JTextField();
        updateBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 255, 204));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel5.setText("VIEW AND UPDATE VITAL SIGN");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(226, 25, -1, -1));

        observationTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Tempreture", "Blood Pressure"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(observationTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(413, 75, 305, 245));

        jLabel6.setText("ID:");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 88, -1, -1));

        viewObservationBtn.setText("VEIW DETAILS");
        viewObservationBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewObservationBtnActionPerformed(evt);
            }
        });
        add(viewObservationBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(496, 351, -1, -1));

        jLabel7.setText("Temperature:");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 145, -1, -1));

        jLabel8.setText("Blood Pressure:");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 206, -1, -1));
        add(fieldObservationID, new org.netbeans.lib.awtextra.AbsoluteConstraints(161, 83, 213, -1));
        add(fieldTemperature, new org.netbeans.lib.awtextra.AbsoluteConstraints(161, 140, 213, -1));
        add(fieldBloodPressure, new org.netbeans.lib.awtextra.AbsoluteConstraints(161, 201, 213, -1));

        updateBtn.setText("UPDATE OBSERVATION");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });
        add(updateBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(94, 268, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        // TODO add your handling code here:
        if (!fieldObservationID.getText().isEmpty()) {

            Observation o = this.application.getHistory().findObservation(Integer.valueOf(fieldObservationID.getText()));
            o.setBloodPressure(Double.valueOf(fieldBloodPressure.getText()));
            o.setTemperature(Double.valueOf(fieldTemperature.getText()));

        } else {
            JOptionPane.showMessageDialog(null, "You have not made any selection!");
        }
        
        displayObservations();
    }//GEN-LAST:event_updateBtnActionPerformed

    private void viewObservationBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewObservationBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = observationTable.getSelectedRow();

        if (selectedRow >= 0) {

            // we can directly fetch the Observation object from the Zeroth position
            this.selectedObservation = (Observation) observationTable.getValueAt(selectedRow, 0);

            // fill all the text fields
            fieldObservationID.setText(String.valueOf(this.selectedObservation.getObservationId()));
            fieldBloodPressure.setText(String.valueOf(this.selectedObservation.getBloodPressure()));
            fieldTemperature.setText(String.valueOf(this.selectedObservation.getTemperature()));

        } else {
            // no selection made by the user

            JOptionPane.showMessageDialog(null, "Please select a row!");
        }

    }//GEN-LAST:event_viewObservationBtnActionPerformed

    public void displayObservations() {
        VitalSignHistory history = this.application.getHistory();

        if (history.getVitalSignHistory().size() > 0) {

            viewtableModel.setRowCount(0);
            for (Observation o : history.getVitalSignHistory()) {

                Object row[] = new Object[3];
                row[0] = o;
                row[1] = o.getTemperature();
                row[2] = o.getBloodPressure();

                viewtableModel.addRow(row);

            }

        } else {
            System.out.print("Empty List!");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField fieldBloodPressure;
    private javax.swing.JTextField fieldObservationID;
    private javax.swing.JTextField fieldTemperature;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable observationTable;
    private javax.swing.JButton updateBtn;
    private javax.swing.JButton viewObservationBtn;
    // End of variables declaration//GEN-END:variables
}
